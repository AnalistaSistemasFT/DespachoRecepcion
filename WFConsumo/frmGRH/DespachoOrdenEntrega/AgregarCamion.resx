<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADAkKABETFQAsFhYAKhkZACYiHQAhISEAPSwrADI9OwBQDw0AXBINAGY5KwB2MysAcT80ACQ6
        eAAtSEwAP0VHACRHUAA+Q3cAN3R7AFtBTgBSS0wAXElJAFxVWQB7R0QAc0xFAH5MTAByUk0AYVVVAHJh
        UwB1YFsAdXRYAGddYABoXmAAXm50AFt9dQBlYmMAfWdiAHJ1awB2cnIAeHZ0AHR4eAC7ViEAh1hPAIFa
        VgCDW1oAi15bAIRnRQCGYF0AjGdfAIptbACDdGMAlXNuAIV0dgCPdXIAjHp5AJh2cgCWenQAmnl1AKJ7
        eQCTgHkAvYxmAKKCfgCugHwAqol4AMujeAAMKqUAFTawABNOmwA1VJAAMGuYABBOqwAKUrIABWGoABJu
        uwAiZ7MAD1vCADtWwwAQacMAGm7JAA1k1QAUfdYAInDMACV10wAJf+4AGJOfAHOFhgB5hIYAc4OMAHiP
        lQBsmKAAZZy1AEestQBywL4AD4jRAC6E0wA8kNMAA4blAAqJ6gAOmOwAFJPpACWX5wAsm+QAOZnkABii
        7wAPovAAE6v3ADeg7QAhqfYATZTaAGaXzgBCs80ATK/XAFa91gBeu98AdrPAAEGa4wBSp+oAY6j4AHu5
        +gAxwO8AKcX8AD3O/AAt3v0ANtL8ADjR/wAs4f8AP+T/ACT4/QBax9oAadLaAH3U2ABA1vsAStP9AELZ
        /wBK3P0AaMLiAGLP6gBzzusAeN7hAHfa/wBH4/8AS+L/AE/u/wBQ5P8AW+P4AFTv/QBa6v4AT/7/AF7x
        /QBQ//8AWfz8AG/j4gBi6voAc+v0AHLk/wBh8v0AZv3/AGv7/gBy/v4AePj/AIyGgwCCjIUAmoWKAJSP
        lACmiYYAsIiEALOMjACtko8As5WLAKSYlwCzk5MAupWVALGWngCzmZgAvZqaAI+1jACuoZgAs6CeALih
        ngCDnqIAip+iAIuqsACsoqIAsaOkAL2logC9qKYAu6GoAKuyrgCrorUAva62AMSaigDBn58Az6ecAN6n
        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
        P//+AH///4H////D////////
</value>
  </data>
</root>